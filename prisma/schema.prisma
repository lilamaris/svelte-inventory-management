// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client"
  output   = "../src/generated/prisma"

  moduleFormat           = "esm"
  generatedFileExtension = "ts"
  importFileExtension    = "ts"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Admin
  Manager
  Viewer
}

enum AccountType {
  Credentials
  Github
  Kakao
}

model Account {
  id String @id @default(uuid())
  providerId String?
  type AccountType

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  passwordHash String?

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([providerId, type])
}

model User {
  id String @id @default(uuid())
  username String
  email String @unique
  avatarUrl String?
  createdAt DateTime @default(now())

  sessions Session[]
  roles UserRole[]
  accounts Account[]
}

model UserRole {
  id String @id @default(uuid())
  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  role Role
}

model Session {
  id String @id
  expiresAt DateTime

  userId String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Item {
  id String @id @default(uuid())
  name String
  sku String @unique
  description String?
  quantity Int
  price Int
  
  imageUrl String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  categoryId String?
  category Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
}

model Category {
  id String @id @default(uuid())
  name String
  description String?

  items Item[]
}